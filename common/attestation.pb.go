// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/attestation.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AttestationEnvelope struct {
	TrieHead             []byte   `protobuf:"bytes,1,opt,name=trie_head,json=trieHead,proto3" json:"trie_head,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestationEnvelope) Reset()         { *m = AttestationEnvelope{} }
func (m *AttestationEnvelope) String() string { return proto.CompactTextString(m) }
func (*AttestationEnvelope) ProtoMessage()    {}
func (*AttestationEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_8efd8872e42d0671, []int{0}
}

func (m *AttestationEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationEnvelope.Unmarshal(m, b)
}
func (m *AttestationEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationEnvelope.Marshal(b, m, deterministic)
}
func (m *AttestationEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationEnvelope.Merge(m, src)
}
func (m *AttestationEnvelope) XXX_Size() int {
	return xxx_messageInfo_AttestationEnvelope.Size(m)
}
func (m *AttestationEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationEnvelope proto.InternalMessageInfo

func (m *AttestationEnvelope) GetTrieHead() []byte {
	if m != nil {
		return m.TrieHead
	}
	return nil
}

func (m *AttestationEnvelope) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type AttestationResultEnvelope struct {
	ChosenTrieHead       []byte      `protobuf:"bytes,1,opt,name=chosen_trie_head,json=chosenTrieHead,proto3" json:"chosen_trie_head,omitempty"`
	BlockNumber          uint64      `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Proof                []*Envelope `protobuf:"bytes,3,rep,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AttestationResultEnvelope) Reset()         { *m = AttestationResultEnvelope{} }
func (m *AttestationResultEnvelope) String() string { return proto.CompactTextString(m) }
func (*AttestationResultEnvelope) ProtoMessage()    {}
func (*AttestationResultEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_8efd8872e42d0671, []int{1}
}

func (m *AttestationResultEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationResultEnvelope.Unmarshal(m, b)
}
func (m *AttestationResultEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationResultEnvelope.Marshal(b, m, deterministic)
}
func (m *AttestationResultEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationResultEnvelope.Merge(m, src)
}
func (m *AttestationResultEnvelope) XXX_Size() int {
	return xxx_messageInfo_AttestationResultEnvelope.Size(m)
}
func (m *AttestationResultEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationResultEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationResultEnvelope proto.InternalMessageInfo

func (m *AttestationResultEnvelope) GetChosenTrieHead() []byte {
	if m != nil {
		return m.ChosenTrieHead
	}
	return nil
}

func (m *AttestationResultEnvelope) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *AttestationResultEnvelope) GetProof() []*Envelope {
	if m != nil {
		return m.Proof
	}
	return nil
}

func init() {
	proto.RegisterType((*AttestationEnvelope)(nil), "common.AttestationEnvelope")
	proto.RegisterType((*AttestationResultEnvelope)(nil), "common.AttestationResultEnvelope")
}

func init() { proto.RegisterFile("common/attestation.proto", fileDescriptor_8efd8872e42d0671) }

var fileDescriptor_8efd8872e42d0671 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0xd5, 0xa2, 0xdb, 0x22, 0x25, 0xbd, 0x44, 0xbd, 0xc4, 0x22, 0x92, 0x4b, 0x37,
	0xa0, 0xbf, 0x40, 0x41, 0xf0, 0xe4, 0x21, 0xa8, 0x07, 0x2f, 0x61, 0x37, 0x99, 0x26, 0xc1, 0x64,
	0x27, 0x4c, 0x26, 0x82, 0xff, 0xc2, 0x9f, 0x2c, 0xcd, 0x44, 0x2d, 0x9e, 0x7a, 0x5a, 0xf6, 0x7b,
	0x6f, 0xe6, 0x31, 0x4f, 0x05, 0x19, 0x36, 0x0d, 0xba, 0xd8, 0x30, 0x43, 0xc7, 0x86, 0x2b, 0x74,
	0xba, 0x25, 0x64, 0xf4, 0xa7, 0xa2, 0x9c, 0x2f, 0x47, 0x87, 0x3c, 0x22, 0xae, 0x5e, 0xd4, 0xf2,
	0xee, 0x6f, 0xe2, 0xc1, 0x7d, 0x40, 0x8d, 0x2d, 0xf8, 0x17, 0xea, 0x84, 0xa9, 0x82, 0xb4, 0x04,
	0x93, 0x07, 0x5e, 0xe8, 0x45, 0xf3, 0xe4, 0x78, 0x0b, 0x1e, 0xc1, 0xe4, 0xfe, 0xa5, 0x9a, 0xdb,
	0x1a, 0xb3, 0xf7, 0xd4, 0xf5, 0x8d, 0x05, 0x0a, 0x0e, 0x42, 0x2f, 0x3a, 0x4c, 0x66, 0x03, 0x7b,
	0x1a, 0xd0, 0xea, 0xcb, 0x53, 0x67, 0x3b, 0x7b, 0x13, 0xe8, 0xfa, 0x9a, 0x7f, 0xb7, 0x47, 0x6a,
	0x91, 0x95, 0xd8, 0x81, 0x4b, 0xff, 0x87, 0x9c, 0x0a, 0x7f, 0xde, 0x3f, 0xca, 0xbf, 0x56, 0x47,
	0x2d, 0x21, 0x6e, 0x82, 0x49, 0x38, 0x89, 0x66, 0x37, 0x0b, 0x3d, 0xde, 0xf7, 0x93, 0x96, 0x88,
	0x7c, 0xff, 0xaa, 0xae, 0x90, 0x0a, 0x5d, 0x7e, 0xb6, 0x40, 0x35, 0xe4, 0x05, 0x90, 0xde, 0x18,
	0x4b, 0x55, 0x26, 0x4d, 0x74, 0xe3, 0xdc, 0x9b, 0x2e, 0x2a, 0x2e, 0x7b, 0xbb, 0xfd, 0xc6, 0x3b,
	0xe6, 0x58, 0xcc, 0x6b, 0x31, 0xaf, 0x0b, 0x1c, 0x7b, 0xb4, 0xd3, 0x81, 0xdc, 0x7e, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xf5, 0x01, 0xe7, 0xd8, 0x81, 0x01, 0x00, 0x00,
}
